/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "swe_keys.h"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT     0
#define GAMING      1
#define SYMBOLS_SWE 2
#define FUNC        3
#define NUMBER      4
#define SETTINGS    5

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hs: homerow_mods_slow {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_SLOW";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    cond_layers {
        compatible = "zmk,conditional-layers";

        // Define SETTINGS layer as tri-state

        func_tristate {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };

    /*           40 Keys
╭─────────────────╮ ╭─────────────────╮
│    0  1  2  3  4│ │ 5  6  7  8  9   │
│10 11 12 13 14 15│ │16 17 18 19 20 21│
│22 23 24 25 26 27│ │28 29 30 31 32 33│
╰────────╮34 35 36│ │37 38 39╭────────╯
         ╰────────╯ ╰────────╯       */
    /*    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };
        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };
        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };
        combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
    }; */

    keymap {
        compatible = "zmk,keymap";

        def {
            bindings = <
        &kp Q           &kp W           &kp F         &kp P          &kp B  &kp J      &kp L        &kp U           &kp Y           &kp SEMICOLON
&none   &hs LEFT_ALT A  &hm LEFT_GUI R  &hm LSHIFT S  &hm LCTRL T    &kp G  &kp M      &hm RCTRL N  &hm RSHIFT E    &hm LEFT_GUI I  &hs RIGHT_ALT O  &none
&trans  &kp Z           &kp X           &kp C         &kp D          &kp V  &kp K      &kp H        &kp COMMA       &kp DOT         &kp SLASH        &none
                                        &to 1         &kp BACKSPACE  &to 2  &kp ENTER  &kp SPACE    &mt ESCAPE TAB
            >;
        };

        Nav {
            bindings = <
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &to 2   &trans  &to 0   &trans  &trans  &trans
            >;
        };

        Sym {
            bindings = <
       &kp N1               &kp N2                &kp N3              &kp N4              &kp N5       &kp N6        &kp N7              &kp N8               &kp N9                 &kp N0
&none  &hs LEFT_ALT SE_SQT  &hm LEFT_GUI SE_AMPS  &hm LSHIFT SE_STAR  &hm LCTRL SE_GRAVE  &kp SE_LBKT  &kp SE_MINUS  &hm RCTRL SE_TILDE  &hm RSHIFT SE_EQUAL  &hm RIGHT_GUI SE_PIPE  &hm RIGHT_ALT C  &none
&none  &kp SE_PRCNT         &kp SE_HASH           &kp SE_CARET        &kp SE_DLLR         &kp SE_RBKT  &kp SE_LBRC   &kp SE_RBRC         &kp SE_LT            &kp SE_GT              &none            &none
                                                  &tog 1              &trans              &to 0        &trans        &trans              &none
            >;
        };

        func_layer {
            bindings = <
       &none     &kp F1  &kp F2   &kp F3   &kp F4   &kp HOME    &kp PG_UP  &kp UP      &kp PG_DN   &kp DEL
&none  &none     &kp F5  &kp F6   &kp F7   &kp F8   &kp END     &kp LEFT   &kp DOWN    &kp RIGHT   &none    &kp C_VOL_UP
&none  &kp CAPS  &kp F9  &kp F10  &kp F11  &kp F12  &kp C_PREV  &kp C_PP   &kp C_NEXT  &kp K_MUTE  &none    &kp C_VOL_DN
                         &none    &trans   &trans   &trans      &trans     &none
            >;
        };

        settings_layer {
            bindings = <
       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &ext_power EP_ON  &ext_power EP_OFF  &none  &none  &none
&none  &bt BT_CLR    &none         &none         &none         &none         &none             &none              &none  &none  &none  &to 0
&none  &out OUT_BLE  &out OUT_USB  &none         &none         &bootloader   &bootloader       &none              &none  &none  &none  &to 0
                                   &none         &trans        &trans        &trans            &trans             &none
            >;
        };
    };
};
